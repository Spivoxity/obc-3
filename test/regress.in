#!/bin/sh
#
# @configure_input@
#
# test/regress.in
# 
# This file is part of the Oxford Oberon-2 compiler
# Copyright (c) 2006--2016 J. M. Spivey
# All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# Config stuff
srcdir=@srcdir@
top_srcdir=@top_srcdir@
WINDOWS=@WINDOWS@
DIFF=@DIFF@
ENABLE_JIT=@ENABLE_JIT@
# End of config

lib=../lib
compiler="../compiler/obc1 -I $lib"
interp="../obx"
if [ "$ENABLE_JIT" = 1 ]; then interp="../obxj"; fi
OBC_LIB=../lib
export OBC_LIB

if [ "$WINDOWS" = 1 ]; then
    fixup=d2u
else
    fixup=cat
fi

promote=false; code=true; run=true; cflags="-O"

while true; do
    case $1 in
	-promote)
	    promote=true; shift;;
	-nocode)
	    code=false; shift;;
	-norun)
	    run=false; shift;;
	-nojit)
	    interp="../obx"; shift;;
        -noopt)
            cflags="-O0"; shift;;
	-*)
	    compiler="$compiler $1"; shift;;
	*)
	    break
    esac
done

status=0

$compiler -x $srcdir/xTypes.m >xTypes.k
$compiler -07 $srcdir/xTypes07.m >xTypes07.k
$compiler -x $srcdir/xPrelude.m >xPrelude.k

for f in ${*:-`cd $srcdir; echo t*.m e*.m`}; do
    echo "$f"

    case $f in
        tMixIt.m) flag="$cflags -w -x";;
        tNan.m) flag="$cflags -b -x";;
        *07.m) flag="$cflags -07 -x";;
        *) flag="$cflags -x";;
    esac

    rm -f a.out a.k out code
    if [ $srcdir != . ]; then cp $srcdir/$f $f; fi
    ($compiler $flag $f >a.k \
	&& sed -f $srcdir/stamp.sed a.k >code \
	&& ../runtime/oblink -L $lib \
                             xTypes.k xTypes07.k xPrelude.k a.k -o a.out \
	&& if $run; then \
	    $interp ./a.out dummy arguments; fi) 2>&1 | $fixup >out
    if [ $srcdir != . ]; then rm $f; fi
    if $promote; then
	sed -f $srcdir/promote.sed $srcdir/$f >$f.new
	mv $f.new $srcdir/$f
    else
	sed -n -e '1,/^(\*<</d' -e '/^>>\*)/q' -e p $srcdir/$f >out.0
	sed -n -e '1,/^(\*\[\[/d' -e '/^]]\*)/q' -e p $srcdir/$f >code.0
	if $run; then $DIFF out.0 out || status=1; fi
	if $code && [ -r code ]; then $fixup < code | $DIFF -c code.0 -; fi
    fi
done

if [ $status -ne 0 ]; then echo Failed!; fi
exit $status
